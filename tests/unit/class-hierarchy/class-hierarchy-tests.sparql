# File: tests/unit/class-hierarchy/class-hierarchy-tests.sparql

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX ex: <http://example.org/ontology#>

# Test 1: Verify Person is a subclass of Agent
ASK {
    ex:Person rdfs:subClassOf ex:Agent
}

# Test 2: Check for multiple inheritance
SELECT ?class (COUNT(?superClass) as ?superClassCount)
WHERE {
    ?class rdfs:subClassOf ?superClass .
    FILTER (?superClass != owl:Thing)
}
GROUP BY ?class
HAVING (?superClassCount > 1)

# Test 3: Detect cycles in class hierarchy
SELECT ?class1 ?class2
WHERE {
    ?class1 rdfs:subClassOf+ ?class2 .
    ?class2 rdfs:subClassOf+ ?class1 .
}

# Test 4: Verify disjoint classes
ASK {
    ex:Person owl:disjointWith ex:Organization
}

# Test 5: Check for orphaned classes
SELECT ?class
WHERE {
    ?class a owl:Class .
    FILTER NOT EXISTS { ?class rdfs:subClassOf ?superClass }
    FILTER (?class != owl:Thing)
}
